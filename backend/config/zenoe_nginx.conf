    # 这个将为打开文件定缓存，默认是没有启的，max 指定缓存数量，
    # 建议和打开文件数，inactive 是指经过多时文件没被请求后删除缓存。
    open_file_cache max=204800 inactive=20s;

    # open_file_cache 指令中inactive 参数时间内文件的最少使用次数，
    # 如果超过这个数字件描述符一直是在缓中开的，如上例，如果有一个
    # 文件在inactive 时间内一次没被使用，它将被移除。
    #open_file_cache_min_uses 1;

    # 这个是指多长时间查一次缓存的有效信息
    #open_file_cache_valid 30s;

    # 默认情况下，Nginx的gzip压缩是关闭的， gzip功能就是可以让你节不
    # 少带宽，但是会增服务器CPU的开销哦，Nginx认只对text/html进行压 ，
    # 如果要对html之外的容进行压缩传输，我们需要手动来设置。
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 9;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;

    # root 放在location 里不生效
    root /var/www/html/zenoe/;
    #log_format  access  '$remote_addr - $remote_user [$time_local] $host "$request" '
    #              '$status $body_bytes_sent "$http_referer" '
    #              '"$http_user_agent" "$http_x_forwarded_for" ';

    server {
        listen 80;
        listen [::]:80;
        # server_name react.xxx.com;
        #root /var/www/html/zenoe/;
        #index index.html;
    location / {
        try_files $uri $uri/ /index.html
        index  index.html index.htm;
    }
    location ^~ /api {
        proxy_pass http://zenoeBackend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    location ~.*\.css$ {
        expires 5d;
        break;
    }

    location ~.*\.js$ {
        expires 5d;
        break;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
        access_log off;
        expires 15d;    #保存15天
        break;
    }

}

upstream zenoeBackend {
    server 127.0.0.1:7007 max_fails=3 fail_timeout=30s;
}
